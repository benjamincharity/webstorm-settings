<templateSet group="TypeScript">
  <template name="disablet" value="// tslint:disable: $camelcase$&#10;// tslint:enable: $END$" description="Disable TSLint for a rule" toReformat="true" toShortenFQNames="true">
    <variable name="camelcase" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="DART" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="HTML" value="false" />
      <option name="JAVA_SCRIPT" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="REQUEST" value="false" />
      <option name="SHELL_SCRIPT" value="false" />
      <option name="Vue" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="disablelinet" value="// tslint:disable-next-line$END$" description="Disable TSLint for the next line" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="disable" value="/* eslint-disable $camelcase$ */&#10;/* eslint-enable $camelcase$ */" description="Disable ESLint for a rule" toReformat="false" toShortenFQNames="true">
    <variable name="camelcase" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="disableany" value="// tslint:disable-next-line no-any$END$" description="Disable TSLint no any rule" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ignoreelse" value="// istanbul ignore else$END$" description="Istanbul ignore else" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="tsobj" value="Record&lt;$key$, $val$&gt;$END$" description="Basic TypeScript object" toReformat="false" toShortenFQNames="true">
    <variable name="key" expression="" defaultValue="&quot;string&quot;" alwaysStopAt="true" />
    <variable name="val" expression="" defaultValue="&quot;string&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="input" value="@Input()&#10;public $myVar$: $string$;$END$" description="Create an @Input declaration" toReformat="false" toShortenFQNames="true">
    <variable name="myVar" expression="" defaultValue="&quot;myVar&quot;" alwaysStopAt="true" />
    <variable name="string" expression="" defaultValue="&quot;string&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="inputset" value="@Input()&#10;public set $inputName$(value: $valueType$) {&#10;  this._$inputName$ = value ? value : $defaultValue$;&#10;}&#10;public get $inputName$(): $valueType$ {&#10;&#9;return this._$inputName$;&#10;}&#10;private _$inputName$: $valueType$$END$;&#10;" description="Create an @Input declaration with setter/getter" toReformat="false" toShortenFQNames="true">
    <variable name="inputName" expression="" defaultValue="&quot;myInput&quot;" alwaysStopAt="true" />
    <variable name="valueType" expression="" defaultValue="&quot;myType&quot;" alwaysStopAt="true" />
    <variable name="defaultValue" expression="" defaultValue="&quot;myFallbackValue&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>